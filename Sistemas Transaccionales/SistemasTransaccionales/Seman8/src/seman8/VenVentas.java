/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package seman8;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author andre
 */
public class VenVentas extends javax.swing.JPanel {
    
    DefaultTableModel model= new DefaultTableModel();
    double total =0;
    boolean agregar=true;
    /**
     * Creates new form VenVentas
     */
    public VenVentas() {
        initComponents();
        model.addColumn("Cantidad");
        model.addColumn("Codigo");
        model.addColumn("Nombre");
        model.addColumn("Precio");
        model.addColumn("Precio Total");
        
        Visor.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSpinner1 = new javax.swing.JSpinner();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        Nombre = new javax.swing.JTextField();
        Codigo = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        Cantidad = new javax.swing.JTextField();
        Precio = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        venta = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Visor = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 0, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Bienvenido al Modulo para registro de ventas");
        jLabel1.setToolTipText("");
        jLabel1.setOpaque(true);

        jButton1.setText("Volver");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setText("CÃ³digo producto: ");

        Nombre.setToolTipText("");
        Nombre.setEnabled(false);
        Nombre.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                NombreFocusLost(evt);
            }
        });

        Codigo.setToolTipText("");
        Codigo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                CodigoFocusLost(evt);
            }
        });

        jLabel3.setText("Nombre del producto: ");

        jLabel4.setText("Total Venta:");

        jLabel5.setText("Precio de Venta:");

        Cantidad.setToolTipText("");
        Cantidad.setEnabled(false);
        Cantidad.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                CantidadFocusLost(evt);
            }
        });

        Precio.setToolTipText("");
        Precio.setEnabled(false);
        Precio.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                PrecioFocusLost(evt);
            }
        });

        jButton2.setText("Agregar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        venta.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        venta.setToolTipText("");
        venta.setEnabled(false);
        venta.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                ventaFocusLost(evt);
            }
        });

        jLabel6.setText("Cantidad Disponible:");

        jButton3.setText("Registrar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        Visor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Visor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                VisorFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                VisorFocusLost(evt);
            }
        });
        Visor.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                VisorInputMethodTextChanged(evt);
            }
        });
        jScrollPane1.setViewportView(Visor);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addGap(16, 16, 16))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Codigo)
                            .addComponent(Cantidad)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(Precio, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Nombre, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel4)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(venta, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jButton1)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                                .addGap(16, 16, 16))))))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 472, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Codigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Cantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Precio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(venta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton3))
                .addContainerGap(16, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(429, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void NombreFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_NombreFocusLost

    }//GEN-LAST:event_NombreFocusLost

    private void CodigoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_CodigoFocusLost
      String sql = "SELECT * FROM Productos WHERE codigo_producto = ?";
        Connection conectarp= (java.sql.Connection) BaseDatos.getIntancia().getConexion(); 
        try(PreparedStatement stmt = conectarp.prepareStatement(sql)) {
            stmt.setString(1, Codigo.getText());
            ResultSet rs = stmt.executeQuery();
            if (rs.next()) {
                Nombre.setText(rs.getString("nombre"));
                Cantidad.setText(rs.getString("cantidad_en_inventario"));
                Precio.setText(rs.getString("precio_venta"));
                if(rs.getInt("productoActivo")==1)agregar=true;
                else{
                    agregar=false;
                    JOptionPane.showMessageDialog(null, "Producto borrado, no se puede agregar.", "", JOptionPane.ERROR_MESSAGE );
                }
            }else{
                JOptionPane.showMessageDialog(null, "Producto no encontrado.", "", JOptionPane.ERROR_MESSAGE );
                Nombre.setText("");
                Cantidad.setText("");
                Precio.setText("");
                agregar=false;
            }
        }catch(SQLException e){
           JOptionPane.showMessageDialog(null, "Producto no encontrado.", "", JOptionPane.ERROR_MESSAGE );
        }
    }//GEN-LAST:event_CodigoFocusLost

    private void CantidadFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_CantidadFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_CantidadFocusLost

    private void PrecioFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_PrecioFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_PrecioFocusLost

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       
        String codigo = Codigo.getText();
        String nombre = Nombre.getText();
        String cantidad = "1";
        String precio = Precio.getText();
        
        // Agregar la nueva fila al modelo
        if(agregar) model.addRow(new Object[]{cantidad, codigo, nombre, precio, precio});

       total();
                // Limpiar los campos de texto despuÃ©s de agregar
        Codigo.setText("");
        Nombre.setText("");
        Cantidad.setText("");
        Precio.setText("");
       
    }//GEN-LAST:event_jButton2ActionPerformed

    private void ventaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ventaFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_ventaFocusLost

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        Connection conectarp= (java.sql.Connection) BaseDatos.getIntancia().getConexion();
        Date fechaActual = new Date();
         java.sql.Date sqlDate = new java.sql.Date(fechaActual.getTime());
        for (int row = 0; row < model.getRowCount(); row++) {
            if (conectarp!=null){
            PreparedStatement stmt = null;
            String sql="INSERT INTO Ventas (fecha_venta, "
                    + "codigo_producto, cantidad_vendida, precio_venta)"
                    + "VALUES (?,?,?,?)";
            
            try{
                stmt= conectarp.prepareStatement(sql);
                stmt.setDate(1, sqlDate);
                stmt.setString(2, (String) model.getValueAt(row, 1));
                stmt.setInt(3, Integer.parseInt(model.getValueAt(row, 0).toString()));
                stmt.setDouble(4,  Double.parseDouble(model.getValueAt(row, 3).toString()));
                
                int filasInsertadas = stmt.executeUpdate();
                if (filasInsertadas > 0) {
                    
                } 
            }catch(SQLException e){
                e.printStackTrace();
            }finally {
                // Cerrar los recursos para evitar fugas de memoria
                try {
                    if (stmt != null) stmt.close();
                } catch (SQLException ex) {
                        ex.printStackTrace();
                    }
                }
            }
            else {
                JOptionPane.showMessageDialog(null, "Error: al intentar conectar con la base de datos", "", JOptionPane.ERROR_MESSAGE );
            }  
        }
        JOptionPane.showMessageDialog(null, "Registro Agegado correctamente.", "", JOptionPane.INFORMATION_MESSAGE );
        this.setVisible(false);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void VisorFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_VisorFocusLost
//        if (evt.getSource() instanceof JTable) {
//            JTable tabla = (JTable) evt.getSource();
//            int filaSeleccionada = tabla.getSelectedRow();
//             if (filaSeleccionada != -1) { 
//                String cantidadStr = model.getValueAt(filaSeleccionada, 1).toString(); // Columna Cantidad
//                String precioStr = model.getValueAt(filaSeleccionada, 4).toString(); // Columna Precio
//                try {
//                        int cantidad = Integer.parseInt(cantidadStr);
//                        double precio = Double.parseDouble(precioStr);
//                        double total = cantidad * precio;
//
//                        // Guardar el total en la columna "Total"
//                        model.setValueAt(total, filaSeleccionada, 5); // Columna Total
//                    } catch (NumberFormatException ex) {
//                        System.err.println("Error de formato numÃ©rico en la fila " + filaSeleccionada);
//                    } 
//             }
//        }
    }//GEN-LAST:event_VisorFocusLost

    private void VisorInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_VisorInputMethodTextChanged
         System.err.println("Error de formato numÃ©rico en la fila ");
    }//GEN-LAST:event_VisorInputMethodTextChanged

    private void VisorFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_VisorFocusGained
        if (evt.getSource() instanceof JTable) {
            JTable tabla = (JTable) evt.getSource();
            int filaSeleccionada = tabla.getSelectedRow();
             if (filaSeleccionada != -1) { 
                String cantidadStr = model.getValueAt(filaSeleccionada, 0).toString(); // Columna Cantidad
                String precioStr = model.getValueAt(filaSeleccionada, 3).toString(); // Columna Precio
                try {
                        int cantidad = Integer.parseInt(cantidadStr);
                        double precio = Double.parseDouble(precioStr);
                        double total = cantidad * precio;

                        // Guardar el total en la columna "Total"
                        model.setValueAt(total, filaSeleccionada, 4); // Columna Total
                        
                    } catch (NumberFormatException ex) {
                        System.err.println("Error de formato numÃ©rico en la fila " + filaSeleccionada);
                    } 
             }
        }
        total();
    }//GEN-LAST:event_VisorFocusGained

    public void total(){
        total=0;
        for (int row = 0; row < model.getRowCount(); row++) {
            Object value = model.getValueAt(row, 4); // Ãndice 3 para la cuarta columna
            if (value instanceof Number) { // Verificar si el valor es un nÃºmero
                total += ((Number) value).doubleValue(); // Sumar el valor
            }else{
                total += Double.parseDouble(value.toString());
            }
        }
        venta.setText(total +"");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Cantidad;
    private javax.swing.JTextField Codigo;
    private javax.swing.JTextField Nombre;
    private javax.swing.JTextField Precio;
    private javax.swing.JTable Visor;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JTextField venta;
    // End of variables declaration//GEN-END:variables
}
